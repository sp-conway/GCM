source('~/Box/GCM/R/gcm_test.R')
source('~/Box/GCM/R/gcm_test.R')
dat;
pred_dat<-gcm_pred(params = params, stim=all_test_coords, categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats)
source('~/Box/GCM/R/gcm_test.R')
pred_dat;
dat<-data.frame()
dat<-data.frame('Stim'=pred_dat$Stim, 'Cat'=pred_dat$Cat)
dat
dat$prob<-rnorm(nrow(dat),m=pred_dat$prob,sd=1.5)
set.seed(123)
dat$prob<-rnorm(nrow(dat),m=pred_dat$prob,sd=1.5)
dat
rm(list=ls())
source('~/Box/GCM/R/gcm_gen_data.R')
dat
rm(list=ls())
source('~/Box/GCM/R/gcm_gen_data.R')
dat
source('~/Box/GCM/R/gcm_gen_data.R')
source('~/Box/GCM/R/gcm_gen_data.R')
rm(list=ls())
source('~/Box/GCM/R/gcm_gen_data.R')
pred_dat
source('~/Box/GCM/R/gcm_gen_data.R')
sse<-sum((pred_dat$prob - gen_dat$prob)^2)
sse
pred_dat$prob - gen_dat
pred_dat$prob - gen_dat$prob
(pred_dat$prob - gen_dat$prob)^2
x<-(pred_dat$prob - gen_dat$prob)^2
sum(x)
rm(x)
source('./gcm_gen_data.R')
rm(list=ls())
source('./gcm_gen_data.R')
source('~/Box/GCM/R/gcm_gen_data.R')
source('~/Box/GCM/R/gcm_gen_data.R')
source('./gcm_gen_data.R')
rm(list=ls())
source('./gcm_gen_data.R')
rm(list=ls())
source('./gcm_gen_data.R')
gcm_compare_preds<-function(params, stim, categories,stim_names,exemplar_names,gen_dat){
pred_dat<-gcm_pred(params, stim, categories,stim_names,exemplar_names,gen_dat)
sse<-sum((pred_dat$prob - gen_dat$prob)^2)
return(list(pred_dat,sse))
}
gcm_compare_preds(params,all_test_coords,exemplar_coords, stim_names, exemplar_cats, gen_dat)
gcm_compare_preds(params,all_test_coords,exemplar_coords, stim_names, exemplar_cats, gen_dat=gen_dat)
gcm_compare_preds<-function(params, stim, categories,stim_names,exemplar_names,gen_dat){
pred_dat<-gcm_pred(params, stim, categories,stim_names,exemplar_names)
sse<-sum((pred_dat$prob - gen_dat$prob)^2)
return(list(pred_dat,sse))
}
gcm_compare_preds(params,all_test_coords,exemplar_coords, stim_names, exemplar_cats, gen_dat=gen_dat)
source('~/Box/GCM/R/gcm_gen_data.R')
source('~/Box/GCM/R/gcm_pred.R')
rm(list=ls())
# Wrapper function to generate gcm_preds
gcm_compare_preds<-function(params, stim, categories,stim_names,exemplar_names,gen_dat){
source('./gcm_pred.R')
pred_dat<-gcm_pred(params, stim, categories,stim_names,exemplar_names)
sse<-sum((pred_dat$prob - gen_dat$prob)^2)
return(list(pred_dat,sse))
}
source('~/Box/GCM/R/gcm_compare_preds.R')
source('~/Box/GCM/R/gcm_gen_data.R')
source('~/Box/GCM/R/gcm_test.R')
# Previous Predicted Data (from Andrew sample)
source('./gcm_test.R')
# Generate fake data
gen_dat<-data.frame('Stim'=pred_dat$Stim, 'Cat'=pred_dat$Cat)
set.seed(123)
gen_dat$prob<-runif(nrow(gen_dat),min = 0, max = 1)
gen_dat
# Generate fake data
gen_dat<-data.frame('Stim'=pred_dat$Stim, 'Cat'=pred_dat$Cat)
set.seed(123)
gen_dat$prob<-runif(nrow(gen_dat),min = 0, max = 1)
gen_dat
source('~/Box/GCM/R/gcm_gen_data.R')
source('~/Box/GCM/R/gcm_test.R')
pred_dat
source('~/Box/GCM/R/gcm_compare_preds.R')
gcm_compare_preds(params=params,stim=all_test_coords,categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats,
gen_dat = gen_dat)
pred_dat<-gcm_compare_preds(params=params,stim=all_test_coords,categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats,
gen_dat = gen_dat)[[1]]
pred_dat
sse<-gcm_compare_preds(params=params,stim=all_test_coords,categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats,
gen_dat = gen_dat)[[2]]
sse
rm(list=ls())
# Getting generated data
source('./gcm_gen_data.R')
# gcm compare predictios function
source('./gcm_compare_preds.R')
# Andrew Sample Data for GCM
all_test_coords <- matrix(c(3, 1,
2, 2,
2.5, 2.5),
ncol=2, byrow=TRUE)
stim_names<-seq(1:nrow(all_test_coords))
# Category exemplars
exemplar_coords <- matrix(c(2,3,
3,3,
3,2,
1,2,
1,1,
2,1),
ncol=2, byrow=TRUE)
# Exemplar categories
exemplar_cats <- c(1, 1, 1, 2, 2, 2)
# Parameters
params <- c(5, .5, .5)  # c, w, b
pred_dat<-gcm_compare_preds(params=params,stim=all_test_coords,categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats,
data = gen_dat)[[1]]
sse<-gcm_compare_preds(params=params,stim=all_test_coords,categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats,
data = gen_dat)[[2]]
rm(list=ls())
source('~/.active-rstudio-document')
library(optimx)
fit<-optimx(par=params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = param_min,
upper = param_max)
fit<-optimx(par=params,
fn=gcm_compare_preds,
method = 'L-BFGS-B')
?optimx
source('~/Box/GCM/R/gcm_test.R', echo=TRUE)
pred_dat
source('~/Box/GCM/R/gen_data.R', echo=TRUE)
gen_dat
source('~/Box/GCM/R/gen_data.R', echo=TRUE)
source('~/Box/GCM/R/gen_data.R', echo=TRUE)
source('~/Box/GCM/R/gen_data.R')
rnorm(gen_dat$prob, sd=.05)
?rnorm
rnorm(gen_dat$prob, sd=.01)
rnorm(gen_dat$prob, sd=.000001)
install.packages('datagen')
?jitter
rnorm(6,gen_dat$prob, sd=.000001)
rnorm(6,gen_dat$prob, sd=.01)
gen_data
gen_dat
source('~/Box/GCM/R/gen_data.R')
source('~/Box/GCM/R/gen_data.R')
gen_dat
set.seed(100)
distort_dat<-data.frame('Stim'=gen_dat$Stim,
'Cat'=gen_dat$Cat,
'prob'=rnorm(nrow(gen_dat),
m=gen_dat$prob,
sd=.05))
distort_dat
source('~/Box/GCM/R/distort_dat.R')
source('~/Box/GCM/R/gcm_compare_preds.R')
source('~/.active-rstudio-document')
rm(list = ls())
source('~/.active-rstudio-document')
gen_dat
args(gcm_compare_preds)
params
# Making up starting values
start_params<-c(2,0.2,0.7)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B')
# Making up starting values for parameters
start_params<-c(0.8,0.45,0.55)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B')
source('~/Box/GCM/R/gcm_fit.R')
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
control=list(minimize=TRUE))
source('~/Box/GCM/R/gcm_sse.R')
# Getting generated data
source('./gcm_gen_data.R')
source('~/Box/GCM/R/gcm_sse.R')
source('~/Box/GCM/R/gcm_fit.R')
source('~/Box/GCM/R/gcm_compare_preds.R')
source('~/Box/GCM/R/gen_data.R')
source('~/Box/GCM/R/gcm_test.R')
source('~/Box/GCM/R/gen_data.R')
rm(list=ls())
source('~/Box/GCM/R/gcm_compare_preds.R')
rm(list=ls())
source('~/Box/GCM/R/gcm_compare_preds_test.R')
rm(list=ls())
source('~/Box/GCM/R/gcm_fit.R')
rm(list=ls())
source('~/Box/GCM/R/gcm_pred_test.R')
rm(list=ls())
source('~/Box/GCM/R/gen_data.R')
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0, 0,0),
upper = c(10, 1,1),
control=list(minimize=TRUE))
# Making up starting values for parameters
start_params<-c(0.8,0.45,0.55)
source('~/Box/GCM/R/gcm_fit.R')
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0, 0,0),
upper = c(10, 1,1),
control=list(minimize=TRUE),
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
source('~/Box/GCM/R/gcm_fit.R')
source('~/Box/GCM/R/gcm_fit.R')
fit
source('~/Box/GCM/R/gcm_fit.R')
fit
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
# Making up starting values for parameters
start_params<-c(0.8,0.45,0.55)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
# Making up starting values for parameters
start_params<-c(10,.9,.1)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
attributes(gen_dat)
dimnames(gen_dat)
gen_dat
gen_dat[][2]
gen_dat[[2]]
source('~/Box/GCM/R/gcm_fit.R')
fit
sse
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
S3
x <- 1
attr(x, "class") <- "foo"
x
x
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
source('~/Box/GCM/R/dist.R')
source('~/Box/GCM/R/gcm_fit.R')
source('~/Box/GCM/R/gcm_fit.R')
fit
fit$value
fit
# Getting the 'actual' data
source('./gen_data.R')
# Getting the 'actual' data
source('../../gen_data.R')
# Getting the 'actual' data
source('../gen_data.R')
# Getting the 'actual' data
getwd()
source('../gen_data.R')
# Getting the 'actual' data
setwd()
# Getting the 'actual' data
wd<-getwd()
setwd(wd)
source('../gen_data.R')
source('./sample_runs/gen_data.R')
# Function for calling gcm_pred, getting predictions, and comparing to data
# Returns predictions & sse
source('./gcm_compare_preds.R')
library(optimx)
# Making up starting values for parameters
start_params<-c(10,.9,.1)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0, 0,0),
upper = c(10, 1,1),
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
fit
?optimx
# Wrapper function to generate gcm predictions and compare to data
# Returns predicted data, sse
gcm_compare_preds<-function(params, stim, categories,stim_names,exemplar_names,data){
source('./gcm_pred.R')
pred_dat<-gcm_pred(params, stim, categories,stim_names,exemplar_names)[[1]]
sse<-sum((pred_dat$prob - data$prob)^2)
return(sse)#list(pred_dat,sse))
}
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
fit[[1]]
fit
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
rm(list=ls())
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
length(params)==4
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
source('~/Box/GCM/R/sample_runs/gcm_pred_test.R')
pred_dat
8^1
params
split(params,4)
View(exemplar_coords)
split(c(1,2,3,4),4)
split(c(1,2,3,4),1)
rm(list=ls())
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R')
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
# Wrapper function to generate gcm predictions and compare to data
# Returns predicted data, sse
gcm_compare_preds<-function(params, stim, categories,stim_names,exemplar_names,data){
source('./gcm_pred.R')
pred_dat<-gcm_pred(params, stim, categories,stim_names,exemplar_names)[[1]]
sse<-sum((pred_dat$prob - data$prob)^2)
return(sse)#list(pred_dat,sse))
}
# Function for calling gcm_pred, getting predictions, and comparing to data
# Returns predictions & sse
source('./gcm_compare_preds.R')
# Getting the 'actual' data
source('./sample_runs/gen_data.R')
library(optimx)
# Making up starting values for parameters
start_params<-c(10,.9,.1)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0, 0,0),
upper = c(10, 1,1),
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
rm(list=ls())
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
# Getting the 'actual' data
source('./sample_runs/gen_data.R')
# Function for calling gcm_pred, getting predictions, and comparing to data
# Returns predictions & sse
source('./gcm_compare_preds.R')
library(optimx)
# Making up starting values for parameters
start_params<-c(10,.9,.1)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
190/(70^2.5)
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
gen_data
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0,0,0),
upper = c(10, 1,1),
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
gen_data<-gcm_pred(params = params, stim=all_test_coords, categories = exemplar_coords,
stim_names = stim_names, exemplar_names = exemplar_cats)[[1]]
gen_data
gcm_pred(params, stim, categories,stim_names,exemplar_names)[[1]]
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0,0,0),
upper = c(10, 1,1),
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_dat)
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
fit<-optimx(par=start_params,
fn=gcm_compare_preds,
method = 'L-BFGS-B',
lower = c(0,0,0),
upper = c(10, 1,1),
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
plot(fit)
fit
source('~/Box/GCM/R/sample_runs/gcm_samp_fit.R', echo=TRUE)
fit
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
gcm_compare_preds(params=start_params,
stim=all_test_coords,
categories=exemplar_coords,
stim_names=stim_names,
exemplar_names = exemplar_cats,
data=gen_data)
